== 스타일 css 속성 ==
: 태그의 모양을 변경하기 위해서 style 속성을 사용하게 됨.

1. 인라인 스타일 inline style
: 태그 직접적으로 스타일 적용하는 방식
<tag style="property:value"></tag>
<태그명 style="스타일속성:값"></태그명>
=> 세미콜론 끊어주고, 띄어쓰기로 작성

2. 내부 스타일 internal style
*<body> 태그에는
<태그명 id=""></태그명> : 큰 구조, 영역(이름 한 번만 사용 가능)
<태그명 class=""></태그명> : 중복디자인, 여러 영역(중복사용가능)

*<head> 태그 사이 <style> 태그 작성
태그명{}
#아이디명{}
.클래스명{}
: 태그에는 class속성 또는 id속성을 적용시키고, <head>안에 <style>을 만들어 스타일 속성들을 묶어두는 방법.


3. 외부 스타일 external style
외부에 css문서를 작성하여 html문서와 연결하여 사용
css문서 첫줄
@charset "utf-8";


!! html문서와 css문서는 꼭 연결되어야 함
<link href="" rel="stylesheet">
____________________________________________
태그의 포함관계
선택자 지정시 태그의 포함관계에 따라 선택자를 작성함
<div id="box">
    <p>1</p>
    <p>2</p>
    <p>3</p>
</div>
#box p{} => #box 안쪽에 포함된 p태그 3개만 모두 한 번에 선택
- 사이트의 나머지 p태그는 선택하지 않음
____________________________________________
== 공간의 값 ==
width 속성 : 태그의 가로너비 px
height 속성 : 태그의 세로높이 px
- 항상 단위 px 작성
- 태그는 사각형(박스모델)로 표현되는 것이 기본
- 배경색이 없이 투명함(공간은 차지함)
- 공간값을 가질 수 있는 태그는 블록요소만 가능 / 인라인 요소 불가
- 태그의 공간값이 적용될 경우, 태그 안의 글자내용은 공간에 맞춰
자동 줄바꿈되어지는 특징이 있음.

== 테두리 ==
border 속성 : 태그에 테두리를 추가하는 속성
- 사방으로 기본적용됨
{border:선두께 선모양 선색상;}
{border:5px solid #f00}  => 테두리 5두께 기본선 빨강색

선모양 대표 3가지 : solid / dotted / dashed

한 방향으로 적용하고 싶다면~
border-top
border-right
border-bottom
border-left




____________________________________________
* 웹 기본 사이즈 단위 : px
(%, em, rem, vh, vw ... )

== 폰트 스타일 ==
color
font-size : 12px
font-weight
값 bold, normal, lighter, bolder
값 100~900
font-style
값 italic (이탤릭, 기울임)
값 normal (기본값)
text-decoration
값 underline(밑줄)
값 line-through(중간줄)
값 none(줄없애기)
text-align : 문단정렬(가로)
값 left
값 center
값 right

____________________________________________

== box-model 박스모델 ==
: 태그가 차지하는 공간을 계산하는 방법.
(태그의 기준은 왼쪽상단 꼭지점 0,0 자리 기준)

box-model width : width + padding좌우 + border 좌우 + margin 좌우
box-model height : height + padding상하 + border 상하 + margin 상하


== 여백속성(바깥 / 안쪽) ==
태그의 테두리 기준 ~
margin : 바깥 영역 추가 여백 (배치 이동만 됨. 공간X)
padding : 안쪽영역 추가 여백 (태그 공간이 늘어남. 공간값 계산)

{margin:30px}  : margin, padding 동일하게 사방으로 30px
{padding:30px} 

margin-top  
margin-right      
margin-bottom        
margin-left                   

**padding 동일하게 적용됨
margin:값1 값2 값3 값4 : 위 오 아 왼 (시계방향)
margin:값1 값2 값3      : 위 좌=우 아래
margin:값1 값2           : 위=아래  좌=우
margin:값1                : 기본값(사방동일)

* 더블 마진 : 양쪽의 여백이 만나게 되면, 큰 쪽의 여백이 적용된다.(여백이 합쳐지지 않는다.)
* 이 현상을 막기 위해서 위에서부터 기준을 잡아서 내려온다.

____________________________________________
* 태그의 배치를 위한 스타일 속성(가로배열)

1) float속성 / ::after 가상선택자
: 블록요소인 태그를 가로배열 시킬 때 사용.
{float:left} : 왼쪽 -> 오른쪽
{float:right} : 오른쪽 -> 왼쪽상단

float 적용시 지켜야할 조건
1) 블록요소 적용(인라인x)
2) 형제관계 성립 태그들만 float 적용 가능
   (부모-자식 / 부모-자손 관계태그는 float 적용 못함)
3) 가로배열되는 형제관계 "모두"에게 float 속성 적용 시켜야 함.
4) 부모태그영역의 가로너비값이 1px라도 모자라면 한줄에 나란히
   되지 않고, 줄바꿈되는 특징이 있음
   ==> 이 특징을 사용해 여러 줄 배열 처리함

   ____________________________________________
   float 적용하면 항상 부모태그에게 ::after 가상 클래스 선택자 사용해야함
   - float를 적용시킨 태그는 웹브라우저에서 "뜬다" 라는 개념으로 인식됨
   ==> float가 적용된 부모태그는 공간값을 인식하지 ㅁ소함
   => 높이가 0 이므로 자동으로 높이값을 인식시키기 위해 ::after 사용해야함

   부모태그::after{content:""; display:block; clear:both;}

   - clearfixed 기능이라고 함(해당 기능을 적용하는 방식은 다양함)

   content:""; <= 가상의 태그를 만들 때, 그 내용을 작성하는 content 라는 속성. 내용이 빈   공간을 만들어 주기 위해서

   display:block; <= 블록요소화 시켜줌(가상 태그는 인라인요소. 그래서 빈공간값을 적용하기 위해 블록요소로 변경해줘야 함)

   clear:both; <= float: left / right 두개(both) 속성을 무효화

   


2) display속성
 1. display:inline-block 
 
 2. table
    display:table
    display:table-cell

 3. flex (Responsive Web)
    display:flex
    display-direction:column

 4. css Grid
    display:Grid
    grid-template-columns : 100px 100px 100px
    grid-template-row : 100px 100px

____________________________________________
== css3의 둥근 모서리(테두리 둥글게) ==
{border-radius:값;}

{border-radius:값1 값2 값3 값4;} 좌상,우상,우하,좌하 (시계방향)
{border-radius:값1 값2;}            대각선 위치한 모서리 동일할 때 줄임

== 원형 만들기 ==
: 웹사이트에서 페이지의 형태를 아이콘으로 o원형으로 표현함
pagination 이미지 or css로 처리 하기도 함

1) width = height = border-radius = 원형
2) {border-radius:50%}
   : width=height 값 동일할 경우 = 원형
   동일하지 않을 경우 = 타원형

   ____________________________________________
   == 폰트와 관련된 속성 ==
   {font-family:"폰트"}
   => 폰트 지정시 사용
   1순위, 2순위... 개념으로 먼저 작성한 글꼴이 순차적으로 인식됨
   글꼴명 중 띄어쓰기 있는 경우 "" 처리하는 것이 좋음
   마지막은 글꼴의 명칭 sans-serif  / serif 로 작성함
   실제 웹 제작시 웹폰트를 사용함
____________________________________________

{text-indent:숫자} : 첫번째 글자 위치 변경함(들여쓰기/내여쓰기)
: 태그의 공간이 이동되는 것이 아니라, 태그 안에 글자만 위치 이동하는 개념
양수(+) : 우측
음수(-) : 좌측

- 웹브라우저 좌측으로 이동하는 컨텐츠는 보여주지 않아도 되기 때문에 ui화면에서 사라지거나,
잘리거나 안보이게 됨
이 속성을 활용하여 모든 해상도, 모니터 크기에 무관하게 해당 글자를 안 보이게 하는 방법으로
{text-indent:-9999px} 를 사용함. 글자만! 안보이게 처리할 때 주로 사용






